/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authLayoutImport } from './routes/(auth)/layout'
import { Route as appLayoutImport } from './routes/(app)/layout'
import { Route as appIndexImport } from './routes/(app)/index'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as appWelcomeImport } from './routes/(app)/welcome'
import { Route as appTokensIndexImport } from './routes/(app)/tokens/index'
import { Route as appProfileIndexImport } from './routes/(app)/profile/index'
import { Route as appInvoicesIndexImport } from './routes/(app)/invoices/index'
import { Route as appCandidatesIndexImport } from './routes/(app)/candidates/index'
import { Route as appTokensSuccessImport } from './routes/(app)/tokens/success'
import { Route as appCandidatesBulkUploadImport } from './routes/(app)/candidates/bulk-upload'
import { Route as appCandidatesCandidateIdLayoutImport } from './routes/(app)/candidates/$candidateId/layout'
import { Route as appCandidatesCandidateIdProfileImport } from './routes/(app)/candidates/$candidateId/profile'
import { Route as appCandidatesCandidateIdMatchingCriteriaImport } from './routes/(app)/candidates/$candidateId/matching-criteria'

// Create/Update Routes

const authLayoutRoute = authLayoutImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const appLayoutRoute = appLayoutImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const appIndexRoute = appIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appLayoutRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authLayoutRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authLayoutRoute,
} as any)

const appWelcomeRoute = appWelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => appLayoutRoute,
} as any)

const appTokensIndexRoute = appTokensIndexImport.update({
  id: '/tokens/',
  path: '/tokens/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appProfileIndexRoute = appProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appInvoicesIndexRoute = appInvoicesIndexImport.update({
  id: '/invoices/',
  path: '/invoices/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appCandidatesIndexRoute = appCandidatesIndexImport.update({
  id: '/candidates/',
  path: '/candidates/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appTokensSuccessRoute = appTokensSuccessImport.update({
  id: '/tokens/success',
  path: '/tokens/success',
  getParentRoute: () => appLayoutRoute,
} as any)

const appCandidatesBulkUploadRoute = appCandidatesBulkUploadImport.update({
  id: '/candidates/bulk-upload',
  path: '/candidates/bulk-upload',
  getParentRoute: () => appLayoutRoute,
} as any)

const appCandidatesCandidateIdLayoutRoute =
  appCandidatesCandidateIdLayoutImport.update({
    id: '/candidates/$candidateId',
    path: '/candidates/$candidateId',
    getParentRoute: () => appLayoutRoute,
  } as any)

const appCandidatesCandidateIdProfileRoute =
  appCandidatesCandidateIdProfileImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => appCandidatesCandidateIdLayoutRoute,
  } as any)

const appCandidatesCandidateIdMatchingCriteriaRoute =
  appCandidatesCandidateIdMatchingCriteriaImport.update({
    id: '/matching-criteria',
    path: '/matching-criteria',
    getParentRoute: () => appCandidatesCandidateIdLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(app)/welcome': {
      id: '/(app)/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof appWelcomeImport
      parentRoute: typeof appLayoutImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof authLayoutImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/candidates/$candidateId': {
      id: '/(app)/candidates/$candidateId'
      path: '/candidates/$candidateId'
      fullPath: '/candidates/$candidateId'
      preLoaderRoute: typeof appCandidatesCandidateIdLayoutImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/candidates/bulk-upload': {
      id: '/(app)/candidates/bulk-upload'
      path: '/candidates/bulk-upload'
      fullPath: '/candidates/bulk-upload'
      preLoaderRoute: typeof appCandidatesBulkUploadImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/tokens/success': {
      id: '/(app)/tokens/success'
      path: '/tokens/success'
      fullPath: '/tokens/success'
      preLoaderRoute: typeof appTokensSuccessImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/candidates/': {
      id: '/(app)/candidates/'
      path: '/candidates'
      fullPath: '/candidates'
      preLoaderRoute: typeof appCandidatesIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/invoices/': {
      id: '/(app)/invoices/'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof appInvoicesIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/profile/': {
      id: '/(app)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof appProfileIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/tokens/': {
      id: '/(app)/tokens/'
      path: '/tokens'
      fullPath: '/tokens'
      preLoaderRoute: typeof appTokensIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/candidates/$candidateId/matching-criteria': {
      id: '/(app)/candidates/$candidateId/matching-criteria'
      path: '/matching-criteria'
      fullPath: '/candidates/$candidateId/matching-criteria'
      preLoaderRoute: typeof appCandidatesCandidateIdMatchingCriteriaImport
      parentRoute: typeof appCandidatesCandidateIdLayoutImport
    }
    '/(app)/candidates/$candidateId/profile': {
      id: '/(app)/candidates/$candidateId/profile'
      path: '/profile'
      fullPath: '/candidates/$candidateId/profile'
      preLoaderRoute: typeof appCandidatesCandidateIdProfileImport
      parentRoute: typeof appCandidatesCandidateIdLayoutImport
    }
  }
}

// Create and export the route tree

interface appCandidatesCandidateIdLayoutRouteChildren {
  appCandidatesCandidateIdMatchingCriteriaRoute: typeof appCandidatesCandidateIdMatchingCriteriaRoute
  appCandidatesCandidateIdProfileRoute: typeof appCandidatesCandidateIdProfileRoute
}

const appCandidatesCandidateIdLayoutRouteChildren: appCandidatesCandidateIdLayoutRouteChildren =
  {
    appCandidatesCandidateIdMatchingCriteriaRoute:
      appCandidatesCandidateIdMatchingCriteriaRoute,
    appCandidatesCandidateIdProfileRoute: appCandidatesCandidateIdProfileRoute,
  }

const appCandidatesCandidateIdLayoutRouteWithChildren =
  appCandidatesCandidateIdLayoutRoute._addFileChildren(
    appCandidatesCandidateIdLayoutRouteChildren,
  )

interface appLayoutRouteChildren {
  appWelcomeRoute: typeof appWelcomeRoute
  appIndexRoute: typeof appIndexRoute
  appCandidatesCandidateIdLayoutRoute: typeof appCandidatesCandidateIdLayoutRouteWithChildren
  appCandidatesBulkUploadRoute: typeof appCandidatesBulkUploadRoute
  appTokensSuccessRoute: typeof appTokensSuccessRoute
  appCandidatesIndexRoute: typeof appCandidatesIndexRoute
  appInvoicesIndexRoute: typeof appInvoicesIndexRoute
  appProfileIndexRoute: typeof appProfileIndexRoute
  appTokensIndexRoute: typeof appTokensIndexRoute
}

const appLayoutRouteChildren: appLayoutRouteChildren = {
  appWelcomeRoute: appWelcomeRoute,
  appIndexRoute: appIndexRoute,
  appCandidatesCandidateIdLayoutRoute:
    appCandidatesCandidateIdLayoutRouteWithChildren,
  appCandidatesBulkUploadRoute: appCandidatesBulkUploadRoute,
  appTokensSuccessRoute: appTokensSuccessRoute,
  appCandidatesIndexRoute: appCandidatesIndexRoute,
  appInvoicesIndexRoute: appInvoicesIndexRoute,
  appProfileIndexRoute: appProfileIndexRoute,
  appTokensIndexRoute: appTokensIndexRoute,
}

const appLayoutRouteWithChildren = appLayoutRoute._addFileChildren(
  appLayoutRouteChildren,
)

interface authLayoutRouteChildren {
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/welcome': typeof appWelcomeRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/candidates/$candidateId': typeof appCandidatesCandidateIdLayoutRouteWithChildren
  '/candidates/bulk-upload': typeof appCandidatesBulkUploadRoute
  '/tokens/success': typeof appTokensSuccessRoute
  '/candidates': typeof appCandidatesIndexRoute
  '/invoices': typeof appInvoicesIndexRoute
  '/profile': typeof appProfileIndexRoute
  '/tokens': typeof appTokensIndexRoute
  '/candidates/$candidateId/matching-criteria': typeof appCandidatesCandidateIdMatchingCriteriaRoute
  '/candidates/$candidateId/profile': typeof appCandidatesCandidateIdProfileRoute
}

export interface FileRoutesByTo {
  '/': typeof appIndexRoute
  '/welcome': typeof appWelcomeRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/candidates/$candidateId': typeof appCandidatesCandidateIdLayoutRouteWithChildren
  '/candidates/bulk-upload': typeof appCandidatesBulkUploadRoute
  '/tokens/success': typeof appTokensSuccessRoute
  '/candidates': typeof appCandidatesIndexRoute
  '/invoices': typeof appInvoicesIndexRoute
  '/profile': typeof appProfileIndexRoute
  '/tokens': typeof appTokensIndexRoute
  '/candidates/$candidateId/matching-criteria': typeof appCandidatesCandidateIdMatchingCriteriaRoute
  '/candidates/$candidateId/profile': typeof appCandidatesCandidateIdProfileRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)': typeof appLayoutRouteWithChildren
  '/(auth)': typeof authLayoutRouteWithChildren
  '/(app)/welcome': typeof appWelcomeRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/candidates/$candidateId': typeof appCandidatesCandidateIdLayoutRouteWithChildren
  '/(app)/candidates/bulk-upload': typeof appCandidatesBulkUploadRoute
  '/(app)/tokens/success': typeof appTokensSuccessRoute
  '/(app)/candidates/': typeof appCandidatesIndexRoute
  '/(app)/invoices/': typeof appInvoicesIndexRoute
  '/(app)/profile/': typeof appProfileIndexRoute
  '/(app)/tokens/': typeof appTokensIndexRoute
  '/(app)/candidates/$candidateId/matching-criteria': typeof appCandidatesCandidateIdMatchingCriteriaRoute
  '/(app)/candidates/$candidateId/profile': typeof appCandidatesCandidateIdProfileRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/welcome'
    | '/login'
    | '/register'
    | '/candidates/$candidateId'
    | '/candidates/bulk-upload'
    | '/tokens/success'
    | '/candidates'
    | '/invoices'
    | '/profile'
    | '/tokens'
    | '/candidates/$candidateId/matching-criteria'
    | '/candidates/$candidateId/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/welcome'
    | '/login'
    | '/register'
    | '/candidates/$candidateId'
    | '/candidates/bulk-upload'
    | '/tokens/success'
    | '/candidates'
    | '/invoices'
    | '/profile'
    | '/tokens'
    | '/candidates/$candidateId/matching-criteria'
    | '/candidates/$candidateId/profile'
  id:
    | '__root__'
    | '/(app)'
    | '/(auth)'
    | '/(app)/welcome'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(app)/'
    | '/(app)/candidates/$candidateId'
    | '/(app)/candidates/bulk-upload'
    | '/(app)/tokens/success'
    | '/(app)/candidates/'
    | '/(app)/invoices/'
    | '/(app)/profile/'
    | '/(app)/tokens/'
    | '/(app)/candidates/$candidateId/matching-criteria'
    | '/(app)/candidates/$candidateId/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appLayoutRoute: typeof appLayoutRouteWithChildren
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  appLayoutRoute: appLayoutRouteWithChildren,
  authLayoutRoute: authLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)",
        "/(auth)"
      ]
    },
    "/(app)": {
      "filePath": "(app)/layout.tsx",
      "children": [
        "/(app)/welcome",
        "/(app)/",
        "/(app)/candidates/$candidateId",
        "/(app)/candidates/bulk-upload",
        "/(app)/tokens/success",
        "/(app)/candidates/",
        "/(app)/invoices/",
        "/(app)/profile/",
        "/(app)/tokens/"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/layout.tsx",
      "children": [
        "/(auth)/login",
        "/(auth)/register"
      ]
    },
    "/(app)/welcome": {
      "filePath": "(app)/welcome.tsx",
      "parent": "/(app)"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx",
      "parent": "/(auth)"
    },
    "/(app)/": {
      "filePath": "(app)/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/candidates/$candidateId": {
      "filePath": "(app)/candidates/$candidateId/layout.tsx",
      "parent": "/(app)",
      "children": [
        "/(app)/candidates/$candidateId/matching-criteria",
        "/(app)/candidates/$candidateId/profile"
      ]
    },
    "/(app)/candidates/bulk-upload": {
      "filePath": "(app)/candidates/bulk-upload.tsx",
      "parent": "/(app)"
    },
    "/(app)/tokens/success": {
      "filePath": "(app)/tokens/success.tsx",
      "parent": "/(app)"
    },
    "/(app)/candidates/": {
      "filePath": "(app)/candidates/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/invoices/": {
      "filePath": "(app)/invoices/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/profile/": {
      "filePath": "(app)/profile/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/tokens/": {
      "filePath": "(app)/tokens/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/candidates/$candidateId/matching-criteria": {
      "filePath": "(app)/candidates/$candidateId/matching-criteria.tsx",
      "parent": "/(app)/candidates/$candidateId"
    },
    "/(app)/candidates/$candidateId/profile": {
      "filePath": "(app)/candidates/$candidateId/profile.tsx",
      "parent": "/(app)/candidates/$candidateId"
    }
  }
}
ROUTE_MANIFEST_END */
