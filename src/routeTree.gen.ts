/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as authLayoutImport } from './routes/(auth)/layout'
import { Route as appLayoutImport } from './routes/(app)/layout'
import { Route as appIndexImport } from './routes/(app)/index'
import { Route as authResetPasswordImport } from './routes/(auth)/reset-password'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as appWelcomeImport } from './routes/(app)/welcome'
import { Route as appTestImport } from './routes/(app)/test'
import { Route as authTwoFactorIndexImport } from './routes/(auth)/two-factor/index'
import { Route as appSettingsIndexImport } from './routes/(app)/settings/index'
import { Route as appProfileIndexImport } from './routes/(app)/profile/index'
import { Route as appComplainceAndVerificationIndexImport } from './routes/(app)/complaince-and-verification/index'
import { Route as appChatIndexImport } from './routes/(app)/chat/index'
import { Route as authTwoFactorOtpImport } from './routes/(auth)/two-factor/otp'
import { Route as appChatRagImport } from './routes/(app)/chat/rag'
import { Route as authAcceptInvitationInvitationIdIndexImport } from './routes/(auth)/accept-invitation/$invitationId/index'

// Create/Update Routes

const authLayoutRoute = authLayoutImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const appLayoutRoute = appLayoutImport.update({
  id: '/(app)',
  getParentRoute: () => rootRoute,
} as any)

const appIndexRoute = appIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => appLayoutRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => authLayoutRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => authLayoutRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => authLayoutRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authLayoutRoute,
} as any)

const appWelcomeRoute = appWelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => appLayoutRoute,
} as any)

const appTestRoute = appTestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => appLayoutRoute,
} as any)

const authTwoFactorIndexRoute = authTwoFactorIndexImport.update({
  id: '/two-factor/',
  path: '/two-factor/',
  getParentRoute: () => authLayoutRoute,
} as any)

const appSettingsIndexRoute = appSettingsIndexImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appProfileIndexRoute = appProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => appLayoutRoute,
} as any)

const appComplainceAndVerificationIndexRoute =
  appComplainceAndVerificationIndexImport.update({
    id: '/complaince-and-verification/',
    path: '/complaince-and-verification/',
    getParentRoute: () => appLayoutRoute,
  } as any)

const appChatIndexRoute = appChatIndexImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => appLayoutRoute,
} as any)

const authTwoFactorOtpRoute = authTwoFactorOtpImport.update({
  id: '/two-factor/otp',
  path: '/two-factor/otp',
  getParentRoute: () => authLayoutRoute,
} as any)

const appChatRagRoute = appChatRagImport.update({
  id: '/chat/rag',
  path: '/chat/rag',
  getParentRoute: () => appLayoutRoute,
} as any)

const authAcceptInvitationInvitationIdIndexRoute =
  authAcceptInvitationInvitationIdIndexImport.update({
    id: '/accept-invitation/$invitationId/',
    path: '/accept-invitation/$invitationId/',
    getParentRoute: () => authLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)': {
      id: '/(app)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof rootRoute
    }
    '/(app)/test': {
      id: '/(app)/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof appTestImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/welcome': {
      id: '/(app)/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof appWelcomeImport
      parentRoute: typeof appLayoutImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/register': {
      id: '/(auth)/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof authLayoutImport
    }
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/chat/rag': {
      id: '/(app)/chat/rag'
      path: '/chat/rag'
      fullPath: '/chat/rag'
      preLoaderRoute: typeof appChatRagImport
      parentRoute: typeof appLayoutImport
    }
    '/(auth)/two-factor/otp': {
      id: '/(auth)/two-factor/otp'
      path: '/two-factor/otp'
      fullPath: '/two-factor/otp'
      preLoaderRoute: typeof authTwoFactorOtpImport
      parentRoute: typeof authLayoutImport
    }
    '/(app)/chat/': {
      id: '/(app)/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof appChatIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/complaince-and-verification/': {
      id: '/(app)/complaince-and-verification/'
      path: '/complaince-and-verification'
      fullPath: '/complaince-and-verification'
      preLoaderRoute: typeof appComplainceAndVerificationIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/profile/': {
      id: '/(app)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof appProfileIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(app)/settings/': {
      id: '/(app)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsIndexImport
      parentRoute: typeof appLayoutImport
    }
    '/(auth)/two-factor/': {
      id: '/(auth)/two-factor/'
      path: '/two-factor'
      fullPath: '/two-factor'
      preLoaderRoute: typeof authTwoFactorIndexImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/accept-invitation/$invitationId/': {
      id: '/(auth)/accept-invitation/$invitationId/'
      path: '/accept-invitation/$invitationId'
      fullPath: '/accept-invitation/$invitationId'
      preLoaderRoute: typeof authAcceptInvitationInvitationIdIndexImport
      parentRoute: typeof authLayoutImport
    }
  }
}

// Create and export the route tree

interface appLayoutRouteChildren {
  appTestRoute: typeof appTestRoute
  appWelcomeRoute: typeof appWelcomeRoute
  appIndexRoute: typeof appIndexRoute
  appChatRagRoute: typeof appChatRagRoute
  appChatIndexRoute: typeof appChatIndexRoute
  appComplainceAndVerificationIndexRoute: typeof appComplainceAndVerificationIndexRoute
  appProfileIndexRoute: typeof appProfileIndexRoute
  appSettingsIndexRoute: typeof appSettingsIndexRoute
}

const appLayoutRouteChildren: appLayoutRouteChildren = {
  appTestRoute: appTestRoute,
  appWelcomeRoute: appWelcomeRoute,
  appIndexRoute: appIndexRoute,
  appChatRagRoute: appChatRagRoute,
  appChatIndexRoute: appChatIndexRoute,
  appComplainceAndVerificationIndexRoute:
    appComplainceAndVerificationIndexRoute,
  appProfileIndexRoute: appProfileIndexRoute,
  appSettingsIndexRoute: appSettingsIndexRoute,
}

const appLayoutRouteWithChildren = appLayoutRoute._addFileChildren(
  appLayoutRouteChildren,
)

interface authLayoutRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authTwoFactorOtpRoute: typeof authTwoFactorOtpRoute
  authTwoFactorIndexRoute: typeof authTwoFactorIndexRoute
  authAcceptInvitationInvitationIdIndexRoute: typeof authAcceptInvitationInvitationIdIndexRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authTwoFactorOtpRoute: authTwoFactorOtpRoute,
  authTwoFactorIndexRoute: authTwoFactorIndexRoute,
  authAcceptInvitationInvitationIdIndexRoute:
    authAcceptInvitationInvitationIdIndexRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/test': typeof appTestRoute
  '/welcome': typeof appWelcomeRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/chat/rag': typeof appChatRagRoute
  '/two-factor/otp': typeof authTwoFactorOtpRoute
  '/chat': typeof appChatIndexRoute
  '/complaince-and-verification': typeof appComplainceAndVerificationIndexRoute
  '/profile': typeof appProfileIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/two-factor': typeof authTwoFactorIndexRoute
  '/accept-invitation/$invitationId': typeof authAcceptInvitationInvitationIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof appIndexRoute
  '/test': typeof appTestRoute
  '/welcome': typeof appWelcomeRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/reset-password': typeof authResetPasswordRoute
  '/chat/rag': typeof appChatRagRoute
  '/two-factor/otp': typeof authTwoFactorOtpRoute
  '/chat': typeof appChatIndexRoute
  '/complaince-and-verification': typeof appComplainceAndVerificationIndexRoute
  '/profile': typeof appProfileIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/two-factor': typeof authTwoFactorIndexRoute
  '/accept-invitation/$invitationId': typeof authAcceptInvitationInvitationIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)': typeof appLayoutRouteWithChildren
  '/(auth)': typeof authLayoutRouteWithChildren
  '/(app)/test': typeof appTestRoute
  '/(app)/welcome': typeof appWelcomeRoute
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/register': typeof authRegisterRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/chat/rag': typeof appChatRagRoute
  '/(auth)/two-factor/otp': typeof authTwoFactorOtpRoute
  '/(app)/chat/': typeof appChatIndexRoute
  '/(app)/complaince-and-verification/': typeof appComplainceAndVerificationIndexRoute
  '/(app)/profile/': typeof appProfileIndexRoute
  '/(app)/settings/': typeof appSettingsIndexRoute
  '/(auth)/two-factor/': typeof authTwoFactorIndexRoute
  '/(auth)/accept-invitation/$invitationId/': typeof authAcceptInvitationInvitationIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/test'
    | '/welcome'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/chat/rag'
    | '/two-factor/otp'
    | '/chat'
    | '/complaince-and-verification'
    | '/profile'
    | '/settings'
    | '/two-factor'
    | '/accept-invitation/$invitationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/test'
    | '/welcome'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/chat/rag'
    | '/two-factor/otp'
    | '/chat'
    | '/complaince-and-verification'
    | '/profile'
    | '/settings'
    | '/two-factor'
    | '/accept-invitation/$invitationId'
  id:
    | '__root__'
    | '/(app)'
    | '/(auth)'
    | '/(app)/test'
    | '/(app)/welcome'
    | '/(auth)/forgot-password'
    | '/(auth)/login'
    | '/(auth)/register'
    | '/(auth)/reset-password'
    | '/(app)/'
    | '/(app)/chat/rag'
    | '/(auth)/two-factor/otp'
    | '/(app)/chat/'
    | '/(app)/complaince-and-verification/'
    | '/(app)/profile/'
    | '/(app)/settings/'
    | '/(auth)/two-factor/'
    | '/(auth)/accept-invitation/$invitationId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appLayoutRoute: typeof appLayoutRouteWithChildren
  authLayoutRoute: typeof authLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  appLayoutRoute: appLayoutRouteWithChildren,
  authLayoutRoute: authLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)",
        "/(auth)"
      ]
    },
    "/(app)": {
      "filePath": "(app)/layout.tsx",
      "children": [
        "/(app)/test",
        "/(app)/welcome",
        "/(app)/",
        "/(app)/chat/rag",
        "/(app)/chat/",
        "/(app)/complaince-and-verification/",
        "/(app)/profile/",
        "/(app)/settings/"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/layout.tsx",
      "children": [
        "/(auth)/forgot-password",
        "/(auth)/login",
        "/(auth)/register",
        "/(auth)/reset-password",
        "/(auth)/two-factor/otp",
        "/(auth)/two-factor/",
        "/(auth)/accept-invitation/$invitationId/"
      ]
    },
    "/(app)/test": {
      "filePath": "(app)/test.tsx",
      "parent": "/(app)"
    },
    "/(app)/welcome": {
      "filePath": "(app)/welcome.tsx",
      "parent": "/(app)"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/login": {
      "filePath": "(auth)/login.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/register": {
      "filePath": "(auth)/register.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx",
      "parent": "/(auth)"
    },
    "/(app)/": {
      "filePath": "(app)/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/chat/rag": {
      "filePath": "(app)/chat/rag.tsx",
      "parent": "/(app)"
    },
    "/(auth)/two-factor/otp": {
      "filePath": "(auth)/two-factor/otp.tsx",
      "parent": "/(auth)"
    },
    "/(app)/chat/": {
      "filePath": "(app)/chat/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/complaince-and-verification/": {
      "filePath": "(app)/complaince-and-verification/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/profile/": {
      "filePath": "(app)/profile/index.tsx",
      "parent": "/(app)"
    },
    "/(app)/settings/": {
      "filePath": "(app)/settings/index.tsx",
      "parent": "/(app)"
    },
    "/(auth)/two-factor/": {
      "filePath": "(auth)/two-factor/index.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/accept-invitation/$invitationId/": {
      "filePath": "(auth)/accept-invitation/$invitationId/index.tsx",
      "parent": "/(auth)"
    }
  }
}
ROUTE_MANIFEST_END */
